# OS X stuff

export PATH="/usr/local/crossgcc/bin:/usr/local/sbin:/Applications/Inkscape.app/Contents/Resources/bin:/usr/local/bin:/usr/texbin:/usr/local/Cellar:/usr/local/texlive/2014/bin/x86_64-darwin:/usr/bin:/bin:/usr/sbin:/sbin:/Users/moritz/Development/android-sdk-macosx/tools:/Users/moritz/Development/android-sdk-macosx/platform-tools:/Users/moritz/Projects/Sapling:$PATH"
export FPATH="/Users/moritz/.zsh-functions/:$FPATH"
autoload ytget

alias sed=gsed

preview() { open -a /Applications/Preview.app $@}

finder() { open -R . }

# start sublime text from command line
subl() {
	/Applications/Sublime\ Text.app/Contents/SharedSupport/bin/subl $@
}

export JUNIT_HOME="/Library/Java"
export ANDROID_HOME="/Users/moritz/Development/android-sdk-macosx"

# From https://github.com/mathiasbynens/dotfiles/
# IP addresses
alias ip="dig +short myip.opendns.com @resolver1.opendns.com"
alias localip="ipconfig getifaddr en1"

notifier() {
	terminal-notifier -title Timer -message $@
}

arcos() {
	cd ~/Dropbox/Projects/arcos
	subl arcos.sublime-project
	DATE=`date "+%Y-%m"`
	subl ~/Dropbox/arcos/Organisation/Arbeitszeiten/${DATE}-moritz.txt
}

browse() {
	 automator -i "$@" ~/Library/Workflows/WebPreview.workflow
}

duck() {
	 #browse "https://api.duckduckgo.com/?q=$@"
	 query=`echo $@ | sed 's/ /%20/g'`
	 automator -i "https://api.duckduckgo.com/?q=${query}" ~/Library/Workflows/WebPreview.workflow
}

# From http://cargocultelectronics.com/2014/06/osx-command-line-file-previews/:

# This beloved script is a much-hacked version of the example at
#	https://raw.githubusercontent.com/gnachman/iTerm2/master/tests/imgcat.
# It uses Quick Look and iTerm nightlies to display arbitrary files inline in the terminal
#
# To use, source this file and:
#    run "preview file1 file2 ..." for inline previews
#    run "ppreview file1 file2 ..." for popout previews

# tmux requires unrecognized OSC sequences to be wrapped with DCS tmux;
# <sequence> ST, and for all ESCs in <sequence> to be replaced with ESC ESC. It
# only accepts ESC backslash for ST.
function print_osc() {
	if [[ $TERM == screen* ]] ; then
		printf "\033Ptmux;\033\033]"
	else
		printf "\033]"
	fi
}

# More of the tmux workaround described above.
function print_st() {
	if [[ $TERM == screen* ]] ; then
		printf "\a\033\\"
	else
	        printf "\a"
	fi
}

# print_image filename inline base64contents
#   filename: Filename to convey to client
#   inline: 0 or 1
#   base64contents: Base64-encoded contents
print_image() {
	print_osc
        printf '1337;File='
	if [[ -n "$1" ]]; then
		printf 'name='`echo -n "$1" | base64`";"
	fi
	if $(base64 --version 2>&1 | grep GNU > /dev/null)
	then
	        BASE64ARG=-d
	else
		BASE64ARG=-D
        fi
	echo -n "$3" | base64 $BASE64ARG | wc -c | awk '{printf "size=%d",$1}'
        printf ";inline=$2"
	printf ":"
        echo -n "$3"
	print_st
        printf '\n'
}

inline() {
	for file in "$@"
	do
		if [ -r "$file" ] ; then
			preview_dir="/tmp"
			thumbnail_size=600

			qlmanage -t -s $thumbnail_size -o "$preview_dir" "$file" 1>/dev/null 2>/dev/null

			thumbnail=$preview_dir/$(basename "$file").png

			echo $file
			print_image "$thumbnail" 1 "$(base64 < "$thumbnail")"
		else
			echo "preview: $file: No such file or directory"
		fi
	done
}

preview() {
	for file in "$@"
	do
		if [ -r "$file" ] ; then
			qlmanage -p "$file" 1>/dev/null 2>/dev/null
		else
		        echo "preview: $file: No such file or directory"
		fi
	done
}